package com.mycompany.datamarketplace.ui;
import javax.swing.JOptionPane;
import javax.swing.JSplitPane;
import com.mycompany.datamarketplace.datamodels.community.CommunityAdmin;
import com.mycompany.datamarketplace.backend.DBAdminUtils;
import com.mycompany.datamarketplace.datamodels.company.CompanyAdmin;
import com.mycompany.datamarketplace.datamodels.government.GovernmentAdmin;
import com.mycompany.datamarketplace.datamodels.university.UniversityAdmin;
import com.mycompany.datamarketplace.datamodels.misc.SupportAdmin;

/**
 *
 * @author aravind
 */
public class AdminLoginPane extends javax.swing.JPanel {

    JSplitPane adminSplitPane;
    /**
     * Creates new form AdminLoginPane
     */
    String systemAdminEmail = "root";
    String systemAdminPassword = "root";
    DBAdminUtils dbAdminUtils;
    String tableName;
    
    public AdminLoginPane(JSplitPane splitPane) {
        this.adminSplitPane = splitPane;
        initComponents();
        
        dbAdminUtils = new DBAdminUtils();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        adminEmailLabel = new javax.swing.JLabel();
        adminEmailField = new javax.swing.JTextField();
        adminPassLabel = new javax.swing.JLabel();
        adminPassField = new javax.swing.JTextField();
        adminLoginButton = new javax.swing.JButton();
        rolesComboBox = new javax.swing.JComboBox<>();

        adminEmailLabel.setText("Email:");

        adminEmailField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminEmailFieldActionPerformed(evt);
            }
        });

        adminPassLabel.setText("Password:");

        adminPassField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminPassFieldActionPerformed(evt);
            }
        });

        adminLoginButton.setText("Login");
        adminLoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminLoginButtonActionPerformed(evt);
            }
        });

        rolesComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please select Admin Type", "Company Admin", "Community Admin", "Country Govt Admin", "Support Admin", "System Admin", "University Admin" }));
        rolesComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rolesComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(adminLoginButton)
                .addGap(332, 332, 332))
            .addGroup(layout.createSequentialGroup()
                .addGap(242, 242, 242)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rolesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(adminEmailLabel)
                            .addComponent(adminPassLabel))
                        .addGap(74, 74, 74)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(adminEmailField)
                            .addComponent(adminPassField, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))))
                .addContainerGap(172, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adminEmailLabel)
                    .addComponent(adminEmailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adminPassLabel)
                    .addComponent(adminPassField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(rolesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(adminLoginButton)
                .addContainerGap(132, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void adminEmailFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminEmailFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adminEmailFieldActionPerformed

    private void adminPassFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminPassFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adminPassFieldActionPerformed

    private void adminLoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminLoginButtonActionPerformed
        // TODO add your handling code here:
        
        String emailId = adminEmailField.getText();
        String password = adminPassField.getText();
        String role = (String.valueOf(rolesComboBox.getEditor().getItem()));
        CommunityAdmin commAdminObj;
        CompanyAdmin compAdminObj;
        GovernmentAdmin govtAdminObj;
        UniversityAdmin uniAdminObj;
        SupportAdmin supportAdminObj;
        
        if(emailId.isEmpty() || emailId.isBlank()){
            JOptionPane.showMessageDialog(this, "Please enter the email");
            return;
        }
        
        if(password.isEmpty() || password.isBlank()){
            JOptionPane.showMessageDialog(this, "Please enter the password");
            return;
        }
        
        switch (role) {
            case "System Admin":
            {
                    if(emailId.equalsIgnoreCase(systemAdminEmail) && password.equals(systemAdminPassword)){
                        AdminPanel adminPanel = new AdminPanel();
                        adminSplitPane.setBottomComponent(adminPanel);
                        return;
                    }
                    else{
                       JOptionPane.showMessageDialog(this, "You do not have system admin privileges");
                       return; 
                    }
            }
            
            case "Community Admin":
            {
                tableName = "community_admin";
                commAdminObj = dbAdminUtils.checkIfCommAdminRoleExists(emailId, password, tableName);
                if(commAdminObj == null) {
                    JOptionPane.showMessageDialog(this, "You do not have community admin privileges");
                    return;
                }
                else{
                    CommunityAdminPane commAdmin = new CommunityAdminPane();
                    adminSplitPane.setBottomComponent(commAdmin);
                    return;
                }
            }
                
            case "Company Admin":
            {
                tableName = "company_admin";
                compAdminObj = dbAdminUtils.checkIfCompAdminRoleExists(emailId, password, tableName);
                if(compAdminObj == null) {
                    JOptionPane.showMessageDialog(this, "You do not have company admin privileges");
                    return;
                }
                else{
                    CompanyAdminPane compAdmin = new CompanyAdminPane();
                    adminSplitPane.setBottomComponent(compAdmin);
                    return;
                }
            }
                
            case "Country Govt Admin":
            {
                tableName = "country_admin";
                govtAdminObj = dbAdminUtils.checkIfGovtAdminRoleExists(emailId, password, tableName);
                if(govtAdminObj == null) {
                    JOptionPane.showMessageDialog(this, "You do not have company admin privileges");
                    return;
                }
                else{
                    GovernmentAdminPane govtAdminPane = new GovernmentAdminPane();
                    adminSplitPane.setBottomComponent(govtAdminPane);
                    return;
                }
            }
                
            case "University Admin":
            {
                tableName = "university_admin";
                uniAdminObj = dbAdminUtils.checkIfUniAdminRoleExists(emailId, password, tableName);
                if(uniAdminObj == null) {
                    JOptionPane.showMessageDialog(this, "You do not have company admin privileges");
                    return;
                }
                else{
                    UniversityAdminPane uniAdminPane = new UniversityAdminPane();
                    adminSplitPane.setBottomComponent(uniAdminPane);
                    return;
                }
            }
            
            case "Support Admin":
            {
                tableName = "support_admin";
                supportAdminObj = dbAdminUtils.checkIfSupportAdminRoleExists(emailId, password, tableName);
                if(supportAdminObj == null) {
                    JOptionPane.showMessageDialog(this, "You do not have support admin privileges");
                    return;
                }
                else{
                    SupportPane supportAdminPane = new SupportPane();
                    adminSplitPane.setBottomComponent(supportAdminPane);
                    return;
                }
            }
        }
    }//GEN-LAST:event_adminLoginButtonActionPerformed

    private void rolesComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rolesComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rolesComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField adminEmailField;
    private javax.swing.JLabel adminEmailLabel;
    private javax.swing.JButton adminLoginButton;
    private javax.swing.JTextField adminPassField;
    private javax.swing.JLabel adminPassLabel;
    private javax.swing.JComboBox<String> rolesComboBox;
    // End of variables declaration//GEN-END:variables
}
