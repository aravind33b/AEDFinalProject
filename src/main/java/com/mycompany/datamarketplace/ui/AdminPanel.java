/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.datamarketplace.ui;

import com.mycompany.datamarketplace.backend.DBAdminUtils;
import com.mycompany.datamarketplace.datamodels.community.Community;
import com.mycompany.datamarketplace.datamodels.company.Company;
import com.mycompany.datamarketplace.datamodels.government.Country;
import com.mycompany.datamarketplace.datamodels.misc.SupportAdmin;
import com.mycompany.datamarketplace.datamodels.university.University;
import java.awt.Cursor;
import java.util.ArrayList;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Admin
 */
public class AdminPanel extends javax.swing.JPanel {
    DBAdminUtils dbAdminUtils;
    ArrayList<Company> companyList;
    ArrayList<SupportAdmin> supportAdminList;
    ArrayList<University> universityList;
    ArrayList<Country> countryList;
    ArrayList<Community> communityList;
    int row,col;
    int selectedRowTemp;
    
    public AdminPanel() {
        initComponents();
        dbAdminUtils = new DBAdminUtils();
        
        companyList = dbAdminUtils.retrieveAllCompanyDetails();
        supportAdminList = dbAdminUtils.retrieveAllSupportAdminDetails();
        universityList = dbAdminUtils.retrieveAllUniversityDetails();
        countryList = dbAdminUtils.retrieveAllCountryDetails();
        communityList = dbAdminUtils.retrieveAllDeveloperCommunity();
        
        populateCompanyTable(companyList);
        populateSupportAdminTable(supportAdminList);
        populateUniversityTable(universityList);
        populateCountryTable(countryList);
        populateDevCommunity(communityList);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        Home1 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        updateCompanyBtn = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        deleteCompanyBtn = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        companyNameTxt = new javax.swing.JTextField();
        cityTxt = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        countryTxt = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        companyTbl = new javax.swing.JTable();
        createCompanyBtn = new javax.swing.JButton();
        searchTxt = new javax.swing.JTextField();
        companyIdTxt = new javax.swing.JTextField();
        emailTxt = new javax.swing.JTextField();
        phoneNumberTxt = new javax.swing.JTextField();
        validationLbl = new javax.swing.JLabel();
        populateValuesBtn = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        supportAdminTbl = new javax.swing.JTable();
        searchSupportAdmin = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        firstNameTxt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        lastNameTxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        supportEmailTxt = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        createSupportAdminBtn = new javax.swing.JButton();
        updateSupportAdminBtn = new javax.swing.JButton();
        deleteSupportAdminBtn = new javax.swing.JButton();
        supportPasswordTxt1 = new javax.swing.JTextField();
        validationLbl1 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jButton28 = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jButton29 = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jTextField19 = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        communityTable = new javax.swing.JTable();
        jButton31 = new javax.swing.JButton();
        searchCommunity = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        deleteCountryBtn = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        createCountryTxt = new javax.swing.JTextField();
        jButton34 = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        countryTable = new javax.swing.JTable();
        createCountryBtn = new javax.swing.JButton();
        searchCountry = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        cityTxt2 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        countryTxt2 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        universityTbl = new javax.swing.JTable();
        createUniBtn = new javax.swing.JButton();
        searchUniversity = new javax.swing.JTextField();
        updateUniBtn = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        deleteUniBtn = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        companyNameTxt2 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        companyIdTxt2 = new javax.swing.JTextField();
        emailTxt2 = new javax.swing.JTextField();
        phoneNumberTxt2 = new javax.swing.JTextField();
        validationLbl2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        adminPasswordTxt = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        searchAdmin = new javax.swing.JTextField();
        createAdminRoleBtn = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        adminsTable = new javax.swing.JTable();
        jLabel33 = new javax.swing.JLabel();
        institutionTx = new javax.swing.JTextField();
        adminEmailTxt = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        deleteAdminRoleBtn = new javax.swing.JButton();
        rolesComboBox = new javax.swing.JComboBox<>();
        validationLbl3 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1200, 600));

        Home1.setPreferredSize(new java.awt.Dimension(1200, 600));
        Home1.setRequestFocusEnabled(false);
        Home1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Home1MouseEntered(evt);
            }
        });

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setPreferredSize(new java.awt.Dimension(1200, 600));

        updateCompanyBtn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        updateCompanyBtn.setText("Update");
        updateCompanyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateCompanyBtnActionPerformed(evt);
            }
        });

        jLabel17.setBackground(java.awt.Color.white);
        jLabel17.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel17.setText("City");

        jLabel24.setBackground(java.awt.Color.white);
        jLabel24.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel24.setText("Email:");

        jLabel18.setBackground(new java.awt.Color(255, 255, 255));
        jLabel18.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel18.setText("Search Company:");

        deleteCompanyBtn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        deleteCompanyBtn.setText("Delete");
        deleteCompanyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCompanyBtnActionPerformed(evt);
            }
        });

        jLabel25.setBackground(java.awt.Color.white);
        jLabel25.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel25.setText("Contact No:");

        jLabel19.setBackground(java.awt.Color.white);
        jLabel19.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel19.setText("Company Name");

        companyNameTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        cityTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel20.setBackground(java.awt.Color.white);
        jLabel20.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel20.setText("Country");

        countryTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel21.setBackground(java.awt.Color.white);
        jLabel21.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel21.setText("Company ID:");

        jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));

        companyTbl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        companyTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Company Name", "City", "Company Id", "Contact no."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        companyTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                companyTblMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(companyTbl);

        createCompanyBtn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        createCompanyBtn.setText("Create");
        createCompanyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createCompanyBtnActionPerformed(evt);
            }
        });

        searchTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        searchTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTxtActionPerformed(evt);
            }
        });
        searchTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTxtKeyReleased(evt);
            }
        });

        companyIdTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        emailTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        emailTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                emailTxtKeyReleased(evt);
            }
        });

        phoneNumberTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        phoneNumberTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                phoneNumberTxtKeyReleased(evt);
            }
        });

        validationLbl.setBackground(java.awt.Color.white);
        validationLbl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        validationLbl.setForeground(new java.awt.Color(255, 51, 51));

        populateValuesBtn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        populateValuesBtn.setText("Populate Values");
        populateValuesBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                populateValuesBtnMouseEntered(evt);
            }
        });
        populateValuesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                populateValuesBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(companyIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel8Layout.createSequentialGroup()
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(companyNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel8Layout.createSequentialGroup()
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(cityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel8Layout.createSequentialGroup()
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(countryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(phoneNumberTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(emailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel8Layout.createSequentialGroup()
                            .addComponent(createCompanyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(updateCompanyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(deleteCompanyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(validationLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(116, 116, 116)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(populateValuesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(companyNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(countryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(companyIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(phoneNumberTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(validationLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(searchTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(createCompanyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(updateCompanyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(deleteCompanyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(populateValuesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Home1.addTab("Company", jPanel8);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setPreferredSize(new java.awt.Dimension(1200, 600));

        jScrollPane1.setBackground(java.awt.Color.white);

        supportAdminTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fiirst Name", "Last Name", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(supportAdminTbl);

        searchSupportAdmin.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        searchSupportAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchSupportAdminActionPerformed(evt);
            }
        });
        searchSupportAdmin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchSupportAdminKeyReleased(evt);
            }
        });

        jLabel7.setBackground(java.awt.Color.white);
        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setText("Search Support Admin:");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel8.setText("First Name:");

        firstNameTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel9.setText("Last Name:");

        lastNameTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel10.setText("Email:");

        supportEmailTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        supportEmailTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                supportEmailTxtKeyReleased(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel11.setText("Password:");

        createSupportAdminBtn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        createSupportAdminBtn.setText("Create");
        createSupportAdminBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createSupportAdminBtnActionPerformed(evt);
            }
        });
        createSupportAdminBtn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                createSupportAdminBtnKeyReleased(evt);
            }
        });

        updateSupportAdminBtn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        updateSupportAdminBtn.setText("Update");

        deleteSupportAdminBtn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        deleteSupportAdminBtn.setText("Delete");
        deleteSupportAdminBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSupportAdminBtnActionPerformed(evt);
            }
        });

        supportPasswordTxt1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        validationLbl1.setBackground(java.awt.Color.white);
        validationLbl1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        validationLbl1.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(firstNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(lastNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(45, 45, 45)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(supportEmailTxt)
                                .addComponent(supportPasswordTxt1)))
                        .addComponent(validationLbl1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(createSupportAdminBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(updateSupportAdminBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(deleteSupportAdminBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchSupportAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(271, 271, 271))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(searchSupportAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(firstNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lastNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(supportEmailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(supportPasswordTxt1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(65, 65, 65)
                        .addComponent(validationLbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deleteSupportAdminBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(createSupportAdminBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateSupportAdminBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(457, 457, 457))))
        );

        Home1.addTab("Support", jPanel6);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setPreferredSize(new java.awt.Dimension(1200, 600));

        jButton28.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton28.setText("Update");

        jLabel28.setBackground(java.awt.Color.white);
        jLabel28.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel28.setText("Search Community:");

        jButton29.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton29.setText("Delete");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });

        jLabel30.setBackground(java.awt.Color.white);
        jLabel30.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel30.setText("Comm. Name");

        jTextField19.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jScrollPane4.setBackground(java.awt.Color.white);

        communityTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Community Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(communityTable);

        jButton31.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton31.setText("Create");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });

        searchCommunity.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        searchCommunity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchCommunityKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(jButton31, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton28, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton29, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(108, 108, 108)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(searchCommunity)
                            .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton31)
                            .addComponent(jButton28)
                            .addComponent(jButton29))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Home1.addTab("Developer Community", jPanel9);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1200, 600));

        deleteCountryBtn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        deleteCountryBtn.setText("Delete");
        deleteCountryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCountryBtnActionPerformed(evt);
            }
        });

        jLabel31.setBackground(java.awt.Color.white);
        jLabel31.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel31.setText("Country Name");

        createCountryTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jButton34.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton34.setText("Update");

        jLabel29.setBackground(java.awt.Color.white);
        jLabel29.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel29.setText("Search Country:");

        jScrollPane5.setBackground(java.awt.Color.white);

        countryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Country"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(countryTable);

        createCountryBtn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        createCountryBtn.setText("Create");
        createCountryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createCountryBtnActionPerformed(evt);
            }
        });

        searchCountry.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        searchCountry.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchCountryKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(createCountryBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton34, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteCountryBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(createCountryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(134, 134, 134)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(searchCountry)
                            .addComponent(jLabel29))
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(createCountryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(createCountryBtn)
                            .addComponent(jButton34)
                            .addComponent(deleteCountryBtn))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Home1.addTab("Countries", jPanel1);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setPreferredSize(new java.awt.Dimension(1200, 600));

        jLabel12.setBackground(java.awt.Color.white);
        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel12.setText("City");

        cityTxt2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel13.setBackground(java.awt.Color.white);
        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel13.setText("Country");

        countryTxt2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel14.setBackground(java.awt.Color.white);
        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel14.setText("Affiliation No:");

        universityTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "University Name", "Email", "Affiliation no.", "City"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(universityTbl);
        if (universityTbl.getColumnModel().getColumnCount() > 0) {
            universityTbl.getColumnModel().getColumn(3).setHeaderValue("City");
        }

        createUniBtn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        createUniBtn.setText("Create");
        createUniBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createUniBtnActionPerformed(evt);
            }
        });

        searchUniversity.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        searchUniversity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchUniversityKeyReleased(evt);
            }
        });

        updateUniBtn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        updateUniBtn.setText("Update");

        jLabel15.setBackground(java.awt.Color.white);
        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel15.setText("Search Universities:");

        deleteUniBtn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        deleteUniBtn.setText("Delete");
        deleteUniBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteUniBtnActionPerformed(evt);
            }
        });

        jLabel16.setBackground(java.awt.Color.white);
        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel16.setText("University Name");

        companyNameTxt2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel22.setBackground(java.awt.Color.white);
        jLabel22.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel22.setText("Email:");

        jLabel23.setBackground(java.awt.Color.white);
        jLabel23.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel23.setText("Contact No:");

        companyIdTxt2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        emailTxt2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        emailTxt2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                emailTxt2KeyReleased(evt);
            }
        });

        phoneNumberTxt2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        phoneNumberTxt2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                phoneNumberTxt2KeyReleased(evt);
            }
        });

        validationLbl2.setBackground(java.awt.Color.white);
        validationLbl2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        validationLbl2.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(createUniBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(updateUniBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteUniBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(validationLbl2, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel7Layout.createSequentialGroup()
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(companyNameTxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel7Layout.createSequentialGroup()
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(cityTxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel7Layout.createSequentialGroup()
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(countryTxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(companyIdTxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(emailTxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(phoneNumberTxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(120, 120, 120)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchUniversity, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(searchUniversity)
                            .addComponent(jLabel15))
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(companyNameTxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cityTxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(countryTxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(companyIdTxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)
                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(emailTxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(phoneNumberTxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(13, 13, 13)
                        .addComponent(validationLbl2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createUniBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateUniBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteUniBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(369, Short.MAX_VALUE))
        );

        Home1.addTab("University", jPanel7);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(1200, 600));

        jLabel27.setBackground(java.awt.Color.white);
        jLabel27.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel27.setText("Insitution");

        adminPasswordTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel32.setBackground(java.awt.Color.white);
        jLabel32.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel32.setText("Search Admin:");

        searchAdmin.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        searchAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchAdminActionPerformed(evt);
            }
        });
        searchAdmin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchAdminKeyReleased(evt);
            }
        });

        createAdminRoleBtn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        createAdminRoleBtn.setText("Create");
        createAdminRoleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAdminRoleBtnActionPerformed(evt);
            }
        });

        jScrollPane6.setBackground(java.awt.Color.white);

        adminsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Admin Email", "Role", "Institution"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(adminsTable);

        jLabel33.setBackground(java.awt.Color.white);
        jLabel33.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel33.setText("Role");

        institutionTx.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        adminEmailTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        adminEmailTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                adminEmailTxtKeyReleased(evt);
            }
        });

        jLabel36.setBackground(java.awt.Color.white);
        jLabel36.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel36.setText("Admin Email");

        jLabel37.setBackground(java.awt.Color.white);
        jLabel37.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel37.setText("Password");

        deleteAdminRoleBtn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        deleteAdminRoleBtn.setText("Delete");
        deleteAdminRoleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAdminRoleBtnActionPerformed(evt);
            }
        });

        rolesComboBox.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        rolesComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please select Admin Type", "University Admin", "Company Admin", "Community Admin", "Country Govt Admin" }));
        rolesComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rolesComboBoxActionPerformed(evt);
            }
        });

        validationLbl3.setBackground(java.awt.Color.white);
        validationLbl3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        validationLbl3.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(adminEmailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(adminPasswordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(rolesComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(institutionTx, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(createAdminRoleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteAdminRoleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(validationLbl3, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(131, 131, 131)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(adminEmailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(adminPasswordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(institutionTx, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rolesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60)
                        .addComponent(validationLbl3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(createAdminRoleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteAdminRoleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(searchAdmin)
                            .addComponent(jLabel32))
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Home1.addTab("Manage Admins", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Home1, javax.swing.GroupLayout.PREFERRED_SIZE, 1188, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Home1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void createCompanyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createCompanyBtnActionPerformed
        // TODO add your handling code here:
        Company companyObject = null;
        String companyName = companyNameTxt.getText();
        String city = cityTxt.getText();
        String country = countryTxt.getText();
        String companyId = companyIdTxt.getText();
        String officialEmail = emailTxt.getText();
        String officialPhone = phoneNumberTxt.getText();
        
        String tableName = "company";
        
        
        if(dbAdminUtils.checkIfIdIsUnique(companyId, tableName)){
            Boolean isSuccess = dbAdminUtils.createAdminBasedOnRoles(
                companyName,
                city,
                country,
                companyId,
                officialEmail,
                officialPhone,
                tableName
            );
            
            if(isSuccess){
                companyNameTxt.setText("");
                cityTxt.setText("");
                countryTxt.setText("");
                companyIdTxt.setText("");
                emailTxt.setText("");
                phoneNumberTxt.setText("");
                JOptionPane.showMessageDialog(this, "Company details are saved!");
                companyObject = dbAdminUtils.retrieveCompanyDetails(companyId, tableName);
                companyList.add(companyObject);
                populateCompanyTable(companyList);
            }
            else{
                  JOptionPane.showMessageDialog(this, "Please check your errors");
                  return;
             }
            
        }
        
        else{
            JOptionPane.showMessageDialog(this, "Company ID already exists");
            return;
        }
        
        
    }//GEN-LAST:event_createCompanyBtnActionPerformed

    private void deleteCompanyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCompanyBtnActionPerformed
        // TODO add your handling code here:
        int selectedRowInd = companyTbl.getSelectedRow();
        
        if(selectedRowInd < 0){
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        }
        
        DefaultTableModel tableModel = (DefaultTableModel) companyTbl.getModel();
        Company selectedEmployee = (Company)tableModel.getValueAt(selectedRowInd, 0);
        String companyIdToBeDeleted = selectedEmployee.getCompanyId();
        companyList.remove(selectedEmployee);
        JOptionPane.showMessageDialog(this, "Records deleted");
        dbAdminUtils.deleteCompany(companyIdToBeDeleted);
        populateCompanyTable(companyList);
    }//GEN-LAST:event_deleteCompanyBtnActionPerformed

    private void createSupportAdminBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createSupportAdminBtnActionPerformed
        // TODO add your handling code here:
        SupportAdmin supportAdmin = null;
        
        String firstName = firstNameTxt.getText();
        String lastName = lastNameTxt.getText();
        String supportEmail = supportEmailTxt.getText();
        String supportPass = supportPasswordTxt1.getText();
        
        String tableName = "support_admin";
        
        
        if(dbAdminUtils.checkIfSupportEmailIsUnique(supportEmail, tableName)){
            Boolean isSuccess = dbAdminUtils.createSupportAdmin(
                firstName,
                lastName,
                supportEmail,
                supportPass,
                tableName
            );
            
            if(isSuccess){
                firstNameTxt.setText("");
                lastNameTxt.setText("");
                supportEmailTxt.setText("");
                supportPasswordTxt1.setText("");
                JOptionPane.showMessageDialog(this, "Support Admin details are saved!");
                supportAdmin = dbAdminUtils.retrieveSupportAdminDetails(supportEmail, tableName);
                supportAdminList.add(supportAdmin);
                populateSupportAdminTable(supportAdminList);
            }
            else{
                  JOptionPane.showMessageDialog(this, "Please check your errors");
                  return;
             }
            
        }
        
        else{
            JOptionPane.showMessageDialog(this, "Support ID already exists");
            return;
        }
    }//GEN-LAST:event_createSupportAdminBtnActionPerformed

    private void deleteSupportAdminBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteSupportAdminBtnActionPerformed
        // TODO add your handling code here:
        int selectedRowInd = supportAdminTbl.getSelectedRow();
        
        if(selectedRowInd < 0){
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        }
        
        DefaultTableModel tableModel = (DefaultTableModel) supportAdminTbl.getModel();
        SupportAdmin selectedEmployee = (SupportAdmin)tableModel.getValueAt(selectedRowInd, 0);
        String email = selectedEmployee.getEmail();
        supportAdminList.remove(selectedEmployee);
        JOptionPane.showMessageDialog(this, "Records deleted");
        dbAdminUtils.deleteSupportAdmin(email);
        populateSupportAdminTable(supportAdminList);
    }//GEN-LAST:event_deleteSupportAdminBtnActionPerformed

    private void createUniBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createUniBtnActionPerformed
        // TODO add your handling code here:
        University companyObject = null;
        String companyName = companyNameTxt2.getText();
        String city = cityTxt2.getText();
        String country = countryTxt2.getText();
        String companyId = companyIdTxt2.getText();
        String officialEmail = emailTxt2.getText();
        String officialPhone = phoneNumberTxt2.getText();
        
        String tableName = "university";
        
        
        if(dbAdminUtils.checkIfIdIsUnique(companyId, tableName)){
            Boolean isSuccess = dbAdminUtils.createAdminBasedOnRoles(
                companyName,
                city,
                country,
                companyId,
                officialEmail,
                officialPhone,
                tableName
            );
            
            if(isSuccess){
                companyNameTxt2.setText("");
                cityTxt2.setText("");
                countryTxt2.setText("");
                companyIdTxt2.setText("");
                emailTxt2.setText("");
                phoneNumberTxt2.setText("");
                JOptionPane.showMessageDialog(this, "University details are saved!");
                companyObject = dbAdminUtils.retrieveUniversityDetails(companyId, tableName);
                universityList.add(companyObject);
                populateUniversityTable(universityList);
            }
            else{
                  JOptionPane.showMessageDialog(this, "Please check your errors");
                  return;
             }
            
        }
        
        else{
            JOptionPane.showMessageDialog(this, "University ID already exists");
            return;
        }
    }//GEN-LAST:event_createUniBtnActionPerformed

    private void deleteUniBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteUniBtnActionPerformed
        // TODO add your handling code here:
        int selectedRowInd = universityTbl.getSelectedRow();
        
        if(selectedRowInd < 0){
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        }
        
        DefaultTableModel tableModel = (DefaultTableModel) universityTbl.getModel();
        University selectedEmployee = (University)tableModel.getValueAt(selectedRowInd, 0);
        String companyIdToBeDeleted = selectedEmployee.getUniversityId();
        universityList.remove(selectedEmployee);
        JOptionPane.showMessageDialog(this, "University records deleted");
        dbAdminUtils.deleteUniversity(companyIdToBeDeleted);
        populateUniversityTable(universityList);
    }//GEN-LAST:event_deleteUniBtnActionPerformed

    private void createCountryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createCountryBtnActionPerformed
        // TODO add your handling code here:
        Country companyObject = null;
        String countryNameForGovt = createCountryTxt.getText();
        
        String tableName = "country";
        
        if(dbAdminUtils.checkIfIdIsUnique(countryNameForGovt, tableName)){
            Boolean isSuccess = dbAdminUtils.createCountryForGovt(
                countryNameForGovt,
                tableName
            );
            
            if(isSuccess){
                createCountryTxt.setText("");
                JOptionPane.showMessageDialog(this, "Country details are saved!");
                companyObject = dbAdminUtils.retrieveCountryDetails(countryNameForGovt, tableName);
                countryList.add(companyObject);
                populateCountryTable(countryList);
            }
            else{
                  JOptionPane.showMessageDialog(this, "Please check your errors");
                  return;
             }
            
        }
        
        else{
            JOptionPane.showMessageDialog(this, "University ID already exists");
            return;
        }
    }//GEN-LAST:event_createCountryBtnActionPerformed

    private void deleteCountryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCountryBtnActionPerformed
        // TODO add your handling code here:
        int selectedRowInd = countryTable.getSelectedRow();
        
        if(selectedRowInd < 0){
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        }
        
        DefaultTableModel tableModel = (DefaultTableModel) countryTable.getModel();
        Country selectedEmployee = (Country)tableModel.getValueAt(selectedRowInd, 0);
        String companyIdToBeDeleted = selectedEmployee.getCountryName();
        countryList.remove(selectedEmployee);
        JOptionPane.showMessageDialog(this, "Country records deleted, UN takes notice!");
        dbAdminUtils.deleteCountry(companyIdToBeDeleted);
        populateCountryTable(countryList);
    }//GEN-LAST:event_deleteCountryBtnActionPerformed

    private void createAdminRoleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAdminRoleBtnActionPerformed
        // TODO add your handling code here:
        String adminEmail = adminEmailTxt.getText();
        String adminPass  = adminPasswordTxt.getText();
        String institution = institutionTx.getText();
        String tableName= "";
        String parentTable = "";
        String role =(String.valueOf(rolesComboBox.getEditor().getItem()));
        
//        University Admin
//        Company Admin
//        Community Admin
//        Country Govt Admin

        switch(role){
            case "University Admin":
                System.out.println(role);
                tableName = "university_admin";
                parentTable = "university";
                
                if(dbAdminUtils.checkIfInstituionExists(institution, parentTable)){
                    Boolean isSuccess = dbAdminUtils.createDifferentAdminRoles(
                           adminEmail,
                           adminPass,
                           institution,
                           tableName,
                           parentTable
                    );

                    if(isSuccess){
                     JOptionPane.showMessageDialog(this, "University Admin Details are stored");
                     adminEmailTxt.setText("");
                     adminPasswordTxt.setText("");
                     institutionTx.setText("");
                     rolesComboBox.setSelectedItem("Please select Admin Type");
                     return;
                    }
                    else{
                        //Pop up here
                     JOptionPane.showMessageDialog(this, "Details are not stored");
                     return;
                    }
                
                }
                else{
                    //Pop up
                    JOptionPane.showMessageDialog(this, "Cannot find university name, contact System Admin");
                    return;
                }
            
            case "Company Admin":
                System.out.println(role);
                tableName = "company_admin";
                parentTable = "company";
                
                if(dbAdminUtils.checkIfInstituionExists(institution, parentTable)){
                    Boolean isSuccess = dbAdminUtils.createDifferentAdminRoles(
                           adminEmail,
                           adminPass,
                           institution,
                           tableName,
                           parentTable
                    );

                    if(isSuccess){
                     JOptionPane.showMessageDialog(this, "Company Admin Details are stored");
                     adminEmailTxt.setText("");
                     adminPasswordTxt.setText("");
                     institutionTx.setText("");
                     rolesComboBox.setSelectedItem("Please select Admin Type");
                     return;
                    }
                    else{
                        //Pop up here
                     JOptionPane.showMessageDialog(this, "Details are not stored");
                     return;
                    }
                
                }
                else{
                    //Pop up
                    JOptionPane.showMessageDialog(this, "Cannot find company name, contact System Admin");
                    return;
                }
            case "Community Admin":
                System.out.println(role);
                tableName = "community_admin";
                parentTable = "developer_community";
                
                if(dbAdminUtils.checkIfInstituionExists(institution, parentTable)){
                    System.out.println("QH oh");
                    Boolean isSuccess = dbAdminUtils.createDifferentAdminRoles(
                           adminEmail,
                           adminPass,
                           institution,
                           tableName,
                           parentTable
                    );

                    if(isSuccess){
                     JOptionPane.showMessageDialog(this, "Community Admin Details are stored");
                     adminEmailTxt.setText("");
                     adminPasswordTxt.setText("");
                     institutionTx.setText("");
                     rolesComboBox.setSelectedItem("Please select Admin Type");
                     return;
                    }
                    else{
                        //Pop up here
                     JOptionPane.showMessageDialog(this, "Details are not stored");
                     return;
                    }
                
                }
                else{
                    //Pop up
                    JOptionPane.showMessageDialog(this, "Cannot find community name, contact System Admin");
                    return;
                }
            case "Country Govt Admin":
                System.out.println(role);
                tableName = "country_admin";
                parentTable = "country";
                
                if(dbAdminUtils.checkIfInstituionExists(institution, parentTable)){
                    Boolean isSuccess = dbAdminUtils.createDifferentAdminRoles(
                           adminEmail,
                           adminPass,
                           institution,
                           tableName,
                           parentTable
                    );

                    if(isSuccess){
                     JOptionPane.showMessageDialog(this, "Country Admin Details are stored");
                     adminEmailTxt.setText("");
                     adminPasswordTxt.setText("");
                     institutionTx.setText("");
                     rolesComboBox.setSelectedItem("Please select Admin Type");
                     return;
                    }
                    else{
                        //Pop up here
                     JOptionPane.showMessageDialog(this, "Details are not stored");
                     return;
                    }
                
                }
                else{
                    //Pop up
                    JOptionPane.showMessageDialog(this, "Cannot find country name, contact System Admin");
                    return;
                }
        }
        
    }//GEN-LAST:event_createAdminRoleBtnActionPerformed

    private void deleteAdminRoleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAdminRoleBtnActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_deleteAdminRoleBtnActionPerformed

    private void rolesComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rolesComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rolesComboBoxActionPerformed

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        // TODO add your handling code here:
        //Create Dev Community Button
        Community companyObject = null;
        String countryNameForGovt = jTextField19.getText();
        
        String tableName = "developer_community";
        
        if(dbAdminUtils.checkIfIdIsUnique(countryNameForGovt, tableName)){
            Boolean isSuccess = dbAdminUtils.createCommunity(
                countryNameForGovt,
                tableName
            );
            
            if(isSuccess){
                createCountryTxt.setText("");
                JOptionPane.showMessageDialog(this, "Country details are saved!");
                companyObject = dbAdminUtils.retrieveCommunityDetails(countryNameForGovt, tableName);
                communityList.add(companyObject);
                populateDevCommunity(communityList);
            }
            else{
                  JOptionPane.showMessageDialog(this, "Please check your errors");
                  return;
             }
            
        }
        
        else{
            JOptionPane.showMessageDialog(this, "University ID already exists");
            return;
        }
        
    }//GEN-LAST:event_jButton31ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        // TODO add your handling code here:
        
        //Delete
        
        int selectedRowInd = communityTable.getSelectedRow();
        
        if(selectedRowInd < 0){
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        }
        
        DefaultTableModel tableModel = (DefaultTableModel) communityTable.getModel();
        Community selectedEmployee = (Community)tableModel.getValueAt(selectedRowInd, 0);
        String companyIdToBeDeleted = selectedEmployee.getCommunityName();
        communityList.remove(selectedEmployee);
        JOptionPane.showMessageDialog(this, "Community records deleted");
        dbAdminUtils.deleteCommunity(companyIdToBeDeleted);
        populateDevCommunity(communityList);
    }//GEN-LAST:event_jButton29ActionPerformed

    private void searchTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTxtKeyReleased
        // TODO add your handling code here:
        DefaultTableModel ShowDetails = (DefaultTableModel)companyTbl.getModel();
        String search = searchTxt.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(ShowDetails);
        companyTbl.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_searchTxtKeyReleased

    private void searchTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTxtActionPerformed

    private void searchSupportAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchSupportAdminActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchSupportAdminActionPerformed

    private void searchSupportAdminKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchSupportAdminKeyReleased
        // TODO add your handling code here:
        DefaultTableModel ShowDetails = (DefaultTableModel)supportAdminTbl.getModel();
        String search = searchSupportAdmin.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(ShowDetails);
        supportAdminTbl.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_searchSupportAdminKeyReleased

    private void searchCommunityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchCommunityKeyReleased
        // TODO add your handling code here:
        DefaultTableModel ShowDetails = (DefaultTableModel)communityTable.getModel();
        String search = searchCommunity.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(ShowDetails);
        communityTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_searchCommunityKeyReleased

    private void searchCountryKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchCountryKeyReleased
        // TODO add your handling code here:
        DefaultTableModel ShowDetails = (DefaultTableModel)countryTable.getModel();
        String search = searchCountry.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(ShowDetails);
        countryTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_searchCountryKeyReleased

    private void searchUniversityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchUniversityKeyReleased
        // TODO add your handling code here:
        DefaultTableModel ShowDetails = (DefaultTableModel)universityTbl.getModel();
        String search = searchUniversity.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(ShowDetails);
        universityTbl.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_searchUniversityKeyReleased

    private void searchAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchAdminActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchAdminActionPerformed

    private void searchAdminKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchAdminKeyReleased
        // TODO add your handling code here:
        DefaultTableModel ShowDetails = (DefaultTableModel)adminsTable.getModel();
        String search = searchAdmin.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(ShowDetails);
        adminsTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_searchAdminKeyReleased

    private void emailTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailTxtKeyReleased
        // TODO add your handling code here:
        String e = emailTxt.getText();
       
        if(Pattern.matches("^(.+)@(\\S+)$", e)){
              validationLbl.setText("");
              createCompanyBtn.setEnabled(true);
              updateCompanyBtn.setEnabled(true);
         }
        else{
            validationLbl.setText("You must enter valid Email address");
            createCompanyBtn.setEnabled(false);
            updateCompanyBtn.setEnabled(false);
        }
    }//GEN-LAST:event_emailTxtKeyReleased

    private void phoneNumberTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phoneNumberTxtKeyReleased
        // TODO add your handling code here:
        String p = phoneNumberTxt.getText();
       
        if(Pattern.matches("^\\+?[1-9][0-9]{9,14}$", p)){
              validationLbl.setText("");
              createCompanyBtn.setEnabled(true);
              updateCompanyBtn.setEnabled(true);
         }
        else{
            validationLbl.setText("You must enter valid Contact Number!!!");
            createCompanyBtn.setEnabled(false);
            updateCompanyBtn.setEnabled(false);
        }
    }//GEN-LAST:event_phoneNumberTxtKeyReleased

    private void createSupportAdminBtnKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_createSupportAdminBtnKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_createSupportAdminBtnKeyReleased

    private void supportEmailTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_supportEmailTxtKeyReleased
        // TODO add your handling code here:
        String e = supportEmailTxt.getText();
       
        if(Pattern.matches("^(.+)@(\\S+)$", e)){
              validationLbl1.setText("");
              createSupportAdminBtn.setEnabled(true);
              updateSupportAdminBtn.setEnabled(true);
         }
        else{
            validationLbl1.setText("You must enter valid Email address");
            createSupportAdminBtn.setEnabled(false);
            updateSupportAdminBtn.setEnabled(false);
        }
    }//GEN-LAST:event_supportEmailTxtKeyReleased

//<<<<<<< HEAD
    private void emailTxt2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailTxt2KeyReleased
        // TODO add your handling code here:
        String e = emailTxt2.getText();
       
        if(Pattern.matches("^(.+)@(\\S+)$", e)){
              validationLbl2.setText("");
              createUniBtn.setEnabled(true);
              updateUniBtn.setEnabled(true);
         }
        else{
            validationLbl2.setText("You must enter valid Email address");
            createUniBtn.setEnabled(false);
            updateUniBtn.setEnabled(false);
        }
    }//GEN-LAST:event_emailTxt2KeyReleased

    private void phoneNumberTxt2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phoneNumberTxt2KeyReleased
        // TODO add your handling code here:
        String p = phoneNumberTxt2.getText();
       
        if(Pattern.matches("^\\+?[1-9][0-9]{9,14}$", p)){
              validationLbl2.setText("");
              createUniBtn.setEnabled(true);
              updateUniBtn.setEnabled(true);
         }
        else{
            validationLbl2.setText("You must enter valid Contact Number");
            createUniBtn.setEnabled(false);
            updateUniBtn.setEnabled(false);
        }
    }//GEN-LAST:event_phoneNumberTxt2KeyReleased

    private void adminEmailTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_adminEmailTxtKeyReleased
        // TODO add your handling code here:
        String e = adminEmailTxt.getText();
       
        if(Pattern.matches("^(.+)@(\\S+)$", e)){
              validationLbl3.setText("");
              createAdminRoleBtn.setEnabled(true);
         }
        else{
            validationLbl3.setText("You must enter valid Email address");
            createAdminRoleBtn.setEnabled(false);
        }
    }//GEN-LAST:event_adminEmailTxtKeyReleased

    private void companyTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_companyTblMouseClicked
        // TODO add your handling code here:
        DefaultTableModel ShowDetails = (DefaultTableModel)companyTbl.getModel();
        row = companyTbl.getSelectedRow();
        col = companyTbl.getColumnCount();
        System.out.println(row+","+ col);
        if(companyTbl.getSelectedRow()==-1){
            
            if(companyTbl.getRowCount()==0){
                validationLbl.setText("Table is Empty");
            }
            else{
                validationLbl.setText("You must select a Row");
            }
        }
        else{
//            EmpID.setText(employee.get(row).id);
//            EmpName.setText(employee.get(row).name);
//            EmpPhone.setText(employee.get(row).phoneNo);
//            EmpEmail.setText(employee.get(row).email);
//            EmpAge.setText(Integer.toString(employee.get(row).age));
//            EmpGender.setText(employee.get(row).empGender);
//            EmpStartDate.setText(employee.get(row).startDate);
//            EmpLevel.setText(employee.get(row).empLevel);
//            EmpTeam.setText(employee.get(row).empTeam);
//            EmpPosition.setText(employee.get(row).position);
//            ProfilePicIcon.setIcon(employee.get(row).profilePic);
            
            
        }
    }//GEN-LAST:event_companyTblMouseClicked
//=======
    private void Home1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Home1MouseEntered
        // TODO add your handling code here:
        Home1.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_Home1MouseEntered

    private void populateValuesBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_populateValuesBtnMouseEntered
        // TODO add your handling code here:
        populateValuesBtn.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_populateValuesBtnMouseEntered

    private void populateValuesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_populateValuesBtnActionPerformed
        // TODO add your handling code here:
        companyIdTxt.setEditable(!companyIdTxt.isEditable());
        int selectedRowInd = companyTbl.getSelectedRow();
        selectedRowTemp = selectedRowInd;
        if(selectedRowInd < 0){
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        }
        DefaultTableModel tableModel = (DefaultTableModel) companyTbl.getModel();
        Company selectedEmployee = (Company)tableModel.getValueAt(selectedRowInd, 0);
        companyNameTxt.setText(selectedEmployee.getCompanyName());
        cityTxt.setText(selectedEmployee.getCity());
        countryTxt.setText(selectedEmployee.getCountry());
        companyIdTxt.setText(selectedEmployee.getCompanyId());
        emailTxt.setText(selectedEmployee.getOfficialEmail());
        phoneNumberTxt.setText(selectedEmployee.getOfficialPhone());
    }//GEN-LAST:event_populateValuesBtnActionPerformed

    private void updateCompanyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateCompanyBtnActionPerformed
        // TODO add your handling code here:
        Company companyObject = null;
        String companyName = companyNameTxt.getText();
        String city = cityTxt.getText();
        String country = countryTxt.getText();
        String companyId = companyIdTxt.getText();
        String officialEmail = emailTxt.getText();
        String officialPhone = phoneNumberTxt.getText();
        String tableName = "company";
        Boolean isSuccess = dbAdminUtils.updateDetails(
                companyName,
                city,
                country,
                companyId,
                officialEmail,
                officialPhone,
                tableName
            );

            if(isSuccess){
                System.out.println(isSuccess);
                companyNameTxt.setText("");
                cityTxt.setText("");
                countryTxt.setText("");
                companyIdTxt.setText("");
                emailTxt.setText("");
                phoneNumberTxt.setText("");
                companyList.remove(selectedRowTemp);
                JOptionPane.showMessageDialog(this, "Company details are updated!");
                companyObject = dbAdminUtils.retrieveCompanyDetails(companyId, tableName);
                companyList.add(companyObject);
                populateCompanyTable(companyList);
            }
            else{
                  System.out.println(isSuccess);
                  JOptionPane.showMessageDialog(this, "Please check your errors");
                  return;
             }
    }//GEN-LAST:event_updateCompanyBtnActionPerformed
//>>>>>>> b49f35430f90e99e70bcf00cf28fae2db6f7a1c0
 private void populateCompanyTable(ArrayList<Company> companyList) {
        DefaultTableModel tableModel = (DefaultTableModel) companyTbl.getModel();
        tableModel.setRowCount(0 );
        
        for(Company itr: companyList){
          if(itr != null){
            Object[] rowOfRecord =  new Object[5];
            rowOfRecord[0] = itr;
            rowOfRecord[1] = itr.getCity();
            rowOfRecord[2] = itr.getCompanyId();
            rowOfRecord[3] = itr.getOfficialPhone();
            tableModel.addRow(rowOfRecord);      
        }     
        }
               
        
    }

  private void populateSupportAdminTable(ArrayList<SupportAdmin> companyList) {
        DefaultTableModel tableModel = (DefaultTableModel) supportAdminTbl.getModel();
        tableModel.setRowCount(0 );
        
        for(SupportAdmin itr: companyList){
          if(itr != null){
            Object[] rowOfRecord =  new Object[5];
            rowOfRecord[0] = itr;
            rowOfRecord[1] = itr.getLastName();
            rowOfRecord[2] = itr.getEmail();
            rowOfRecord[3] = itr.getEmail();
            tableModel.addRow(rowOfRecord);      
        }     
        }
               
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Home1;
    private javax.swing.JTextField adminEmailTxt;
    private javax.swing.JTextField adminPasswordTxt;
    private javax.swing.JTable adminsTable;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField cityTxt;
    private javax.swing.JTextField cityTxt2;
    private javax.swing.JTable communityTable;
    private javax.swing.JTextField companyIdTxt;
    private javax.swing.JTextField companyIdTxt2;
    private javax.swing.JTextField companyNameTxt;
    private javax.swing.JTextField companyNameTxt2;
    private javax.swing.JTable companyTbl;
    private javax.swing.JTable countryTable;
    private javax.swing.JTextField countryTxt;
    private javax.swing.JTextField countryTxt2;
    private javax.swing.JButton createAdminRoleBtn;
    private javax.swing.JButton createCompanyBtn;
    private javax.swing.JButton createCountryBtn;
    private javax.swing.JTextField createCountryTxt;
    private javax.swing.JButton createSupportAdminBtn;
    private javax.swing.JButton createUniBtn;
    private javax.swing.JButton deleteAdminRoleBtn;
    private javax.swing.JButton deleteCompanyBtn;
    private javax.swing.JButton deleteCountryBtn;
    private javax.swing.JButton deleteSupportAdminBtn;
    private javax.swing.JButton deleteUniBtn;
    private javax.swing.JTextField emailTxt;
    private javax.swing.JTextField emailTxt2;
    private javax.swing.JTextField firstNameTxt;
    private javax.swing.JTextField institutionTx;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton34;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField lastNameTxt;
    private javax.swing.JTextField phoneNumberTxt;
    private javax.swing.JTextField phoneNumberTxt2;
    private javax.swing.JButton populateValuesBtn;
    private javax.swing.JComboBox<String> rolesComboBox;
    private javax.swing.JTextField searchAdmin;
    private javax.swing.JTextField searchCommunity;
    private javax.swing.JTextField searchCountry;
    private javax.swing.JTextField searchSupportAdmin;
    private javax.swing.JTextField searchTxt;
    private javax.swing.JTextField searchUniversity;
    private javax.swing.JTable supportAdminTbl;
    private javax.swing.JTextField supportEmailTxt;
    private javax.swing.JTextField supportPasswordTxt1;
    private javax.swing.JTable universityTbl;
    private javax.swing.JButton updateCompanyBtn;
    private javax.swing.JButton updateSupportAdminBtn;
    private javax.swing.JButton updateUniBtn;
    private javax.swing.JLabel validationLbl;
    private javax.swing.JLabel validationLbl1;
    private javax.swing.JLabel validationLbl2;
    private javax.swing.JLabel validationLbl3;
    // End of variables declaration//GEN-END:variables

    private void populateUniversityTable(ArrayList<University> companyList) {
        DefaultTableModel tableModel = (DefaultTableModel) universityTbl.getModel();
        tableModel.setRowCount(0 );
        
        for(University itr: companyList){
          if(itr != null){
            Object[] rowOfRecord =  new Object[5];
            rowOfRecord[0] = itr;
            rowOfRecord[1] = itr.getCity();
            rowOfRecord[2] = itr.getCountry();
            rowOfRecord[3] = itr.getUniversityId();
            tableModel.addRow(rowOfRecord);      
        }     
        }
    }

    private void populateCountryTable(ArrayList<Country> countryList) {
       DefaultTableModel tableModel = (DefaultTableModel) countryTable.getModel();
        tableModel.setRowCount(0 );
        
        for(Country itr: countryList){
          if(itr != null){
            Object[] rowOfRecord =  new Object[5];
            rowOfRecord[0] = itr;
            tableModel.addRow(rowOfRecord);      
        }     
        }
    }
    
    private void populateDevCommunity(ArrayList<Community> communityList) {
        DefaultTableModel tableModel = (DefaultTableModel) communityTable.getModel();
        tableModel.setRowCount(0 );
        
        for(Community itr: communityList){
          if(itr != null){
            Object[] rowOfRecord =  new Object[5];
            rowOfRecord[0] = itr;
            tableModel.addRow(rowOfRecord);      
        }     
        }
    }
}
